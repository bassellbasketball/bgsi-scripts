local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local RemoteEvent = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote"):WaitForChild("RemoteEvent")

local notificationSettings = {"SetSetting", "Item Notifications", false}
RemoteEvent:FireServer(unpack(notificationSettings))

local function useMysteryBox()
    local args = {"UseGift", "Fall Mystery Box", 25}
    RemoteEvent:FireServer(unpack(args))
end

local function findCurrentGiftIDs()
    local rendered = Workspace:FindFirstChild("Rendered")
    if not rendered then return {} end
    local giftsFolder = rendered:FindFirstChild("Gifts")
    if not giftsFolder then return {} end
    local currentIDs = {}
    for _, gift in pairs(giftsFolder:GetChildren()) do
        if gift:IsA("Model") or gift:IsA("Part") then
            table.insert(currentIDs, gift.Name)
        end
    end
    return currentIDs
end

local function claimGift(giftID)
    local args = {"ClaimGift", giftID}
    RemoteEvent:FireServer(unpack(args))
end

while true do
    useMysteryBox()
    task.wait(0.5)
    local currentGifts = findCurrentGiftIDs()
    for _, giftID in pairs(currentGifts) do
        claimGift(giftID)
    end
    task.wait(0.5)
end 
